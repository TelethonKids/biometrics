% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/variable_rollup.R
\name{variable_rollup}
\alias{variable_rollup}
\title{Roll column values from multiple data table rows into a single record.}
\usage{
variable_rollup(x, names = NULL, by = NULL, clip = FALSE)
}
\arguments{
\item{x}{Input data frame that contains all rows and columns that are to be rolled.}

\item{names}{An optional vector of output column names.}

\item{by}{An optional vector of elements that are listed in the order required of the output.}

\item{clip}{When including a \code{by} argument, \code{clip = TRUE} will return only values that are also in the \code{by} vector, otherwise the remaining codes are appended to the end of the sorted list; default: \code{clip = FALSE}.}
}
\value{
A single row data table.\cr\cr NAs are removed and output strings are not factors.
}
\description{
\code{variable_rollup} collects all values in a data table and returns them in a single row of a size matching the number of unique values.\cr\cr The column names of the input data frame can be maintained, or new labels can be supplied; values are clipped When the number of columns are fewer than the number of rolled values.
}
\examples{
\dontrun{
data.frame(a = c(1, 2), b = c(2, 3), c = c(NA, 4)) %>% tbl_df -> x
data.frame(a = c(NA, NA), b = c(NA, NA), c = c(NA, NA)) -> y
LETTERS -> z
c(4, 3) -> s

# Column names are not specified
variable_rollup(x) # Will warn that there are too few columns for the number of variables

# Sepcify column names
variable_rollup(x, names = z)

# Data frame that contains only NAs
variable_rollup(y)

# Sort output per s and append remaining values not in s.
variable_rollup(x, names = z, by = s, clip = FALSE)
}

}
